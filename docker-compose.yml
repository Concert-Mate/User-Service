services:
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PROJECT_USER_NAME: ${PROJECT_USER_NAME}
      PROJECT_USER_PASSWORD: ${PROJECT_USER_PASSWORD}
      PROJECT_USER_DATABASE_NAME: ${PROJECT_USER_DATABASE_NAME}
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-data:/var/lib/postgresql/data
    env_file:
      - .env

  elasticsearch:
    image: elasticsearch:8.12.2
    environment:
      - discovery.type=single-node
      - cluster.name=es-cluster-1
      - node.name=es-node-1-1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "xpack.security.enabled=true"
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
      - "ELASTIC_USER=${ELASTIC_USER}"

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "100"
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f -X GET 'localhost:9200/_cat/health?v' --user $ELASTIC_USER:$ELASTIC_PASSWORD | grep -q 'green'"]
      interval: 1s
      timeout: 20s
      retries: 200
    env_file:
      - .env

  indexer:
    volumes:
      - ./indexer:/app/indexer
    build:
      context: indexer/

    depends_on:
      elasticsearch:
        condition: service_healthy
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3.9-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 10